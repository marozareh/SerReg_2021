// Generated by GraphWalker (http://www.graphwalker.org)
package com.mbtroads;

import org.graphwalker.java.annotation.Model;
import org.graphwalker.java.annotation.Vertex;
import org.graphwalker.java.annotation.Edge;

@Model(file = "com/mbtroads/QueryService.json")
public interface SericeQuery {

    @Vertex()
    void v_FilterOnInterface();

    @Vertex()
    void v_ServiceQueryInterfaceNotDefined();

    @Edge()
    void e_back_QueryService();

    @Edge()
    void e_QueryVersionNotDefined();

    @Vertex()
    void v_BadPayloadException();

    @Edge()
    void e_back_ValidPayload();

    @Edge()
    void e_QueryMetadatNotDefined();

    @Edge()
    void e_QueryMetadataDefined();

    @Vertex()
    void v_FilterOnVersion();

    @Vertex()
    void v_QueryService();

    @Vertex()
    void v_FilterOnSecurity();

    @Edge()
    void e_validServiceQueryForm();

    @Edge()
    void e_QueryInterfaceNotDefined();

    @Vertex()
    void v_ServiceQuerySecurityTypeNotDefined();

    @Edge()
    void e_InvaledServiceQuerForm();

    @Edge()
    void e_QueryVersionDefined();

    @Vertex()
    void v_FilterOnMetadata();

    @Edge()
    void e_start();

    @Vertex()
    void v_ServiceQueryVersionNotDefined();

    @Edge()
    void e_QuerySecurtyDefined();

    @Vertex()
    void v_ServiceQueryMetadataNotDefined();

    @Edge()
    void e_QuerySecurityTypeNotDefined();

    @Vertex()
    void v_Start();

    @Edge()
    void e_QueryInterfaceDefined();

    @Edge()
    void e_PingProvider();

    @Vertex()
    void v_ValidPayload();

    @Vertex()
    void v_QueryResponce();
}
